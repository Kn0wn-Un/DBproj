[{"/home/unknown/DBproj/hosttest/client/src/index.js":"1","/home/unknown/DBproj/hosttest/client/src/About.js":"2","/home/unknown/DBproj/hosttest/client/src/Routes.js":"3","/home/unknown/DBproj/hosttest/client/src/ShowDetail.js":"4","/home/unknown/DBproj/hosttest/client/src/MovieDetail.js":"5","/home/unknown/DBproj/hosttest/client/src/Navig.js":"6","/home/unknown/DBproj/hosttest/client/src/Search.js":"7","/home/unknown/DBproj/hosttest/client/src/Components/ShowSearch.js":"8","/home/unknown/DBproj/hosttest/client/src/Components/MovieSearch.js":"9","/home/unknown/DBproj/hosttest/client/src/Components/UserSummary.js":"10","/home/unknown/DBproj/hosttest/client/src/Components/UserTable.js":"11","/home/unknown/DBproj/hosttest/client/src/Login.js":"12","/home/unknown/DBproj/hosttest/client/src/SignUp.js":"13","/home/unknown/DBproj/hosttest/client/src/ShowForm.js":"14","/home/unknown/DBproj/hosttest/client/src/Components/FormIcons.js":"15","/home/unknown/DBproj/hosttest/client/src/MovieForm.js":"16"},{"size":239,"mtime":1606402082166,"results":"17","hashOfConfig":"18"},{"size":3474,"mtime":1607353701430,"results":"19","hashOfConfig":"18"},{"size":1631,"mtime":1607317377011,"results":"20","hashOfConfig":"18"},{"size":2475,"mtime":1607149861937,"results":"21","hashOfConfig":"18"},{"size":3264,"mtime":1607155947229,"results":"22","hashOfConfig":"18"},{"size":654,"mtime":1607324440107,"results":"23","hashOfConfig":"18"},{"size":2557,"mtime":1606794750767,"results":"24","hashOfConfig":"18"},{"size":903,"mtime":1606801255854,"results":"25","hashOfConfig":"18"},{"size":963,"mtime":1607057154841,"results":"26","hashOfConfig":"18"},{"size":873,"mtime":1607322612167,"results":"27","hashOfConfig":"18"},{"size":1384,"mtime":1607332863463,"results":"28","hashOfConfig":"18"},{"size":4682,"mtime":1607148267245,"results":"29","hashOfConfig":"18"},{"size":4323,"mtime":1607354712296,"results":"30","hashOfConfig":"18"},{"size":3881,"mtime":1607317165520,"results":"31","hashOfConfig":"18"},{"size":4502,"mtime":1607146785929,"results":"32","hashOfConfig":"18"},{"size":3891,"mtime":1607323248199,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1b7jicn",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/unknown/DBproj/hosttest/client/src/index.js",[],["74","75"],"/home/unknown/DBproj/hosttest/client/src/About.js",["76"],"/home/unknown/DBproj/hosttest/client/src/Routes.js",[],["77","78"],"/home/unknown/DBproj/hosttest/client/src/ShowDetail.js",["79","80","81"],"import './styles.css';\nimport { useEffect, useState } from 'react';\nimport ShowForm from './ShowForm';\n\nfunction ShowDetail({ match, isAuth, user }) {\n    const [name, setName] = useState({});\n    const [gotData, setGot] = useState(false);\n    const mkSeasons = () => {\n        const sArr = eval(name.seasons).map((season, index) => {\n            return (\n                <li key={index}>\n                    <span className=\"heading\">Season {index + 1}: </span>\n                    <span>{season.nb_episodes} episodes</span>\n                </li>\n            );\n        });\n        return sArr;\n    };\n    const viewShow = () => {\n        return (\n            <div className=\"show-details\">\n                <img alt={name.name} src={name.poster_image}></img>\n                <div className=\"holder\">\n                    <div className=\"details\">\n                        <h1 className=\"name\">{name.name}</h1>\n                        <div>\n                            <span className=\"heading\">Network: </span>\n                            {name.network}\n                        </div>\n                        <div>\n                            <span className=\"heading\">Number of Seasons: </span>{' '}\n                            {name.number_of_seasons}\n                        </div>\n                        <ul>{mkSeasons()}</ul>\n                        <div>\n                            <span className=\"heading\">Average Duration: </span>{' '}\n                            {name.runtime} mins\n                        </div>\n                    </div>\n                    {isAuth ? (\n                        <div className=\"show-form\">\n                            <ShowForm show={name} user={user} />\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n        );\n    };\n    useEffect(() => {\n        console.log('Hello World Show Detail');\n        console.log(match.params.id);\n        console.log(user);\n        fetch(`/api/shows?id=${match.params.id}`)\n            .then((res) => res.json())\n            .then((data) => {\n                setName(data);\n                setGot(true);\n            });\n        return () => {\n            console.log('Unmounted Show Detail');\n        };\n    }, []);\n    useEffect(() => {\n        console.log(name);\n    }, [gotData]);\n    return (\n        <div className=\"App\">\n            {gotData ? <ol>{viewShow()}</ol> : 'loading'}{' '}\n        </div>\n    );\n}\n\nexport default ShowDetail;\n",["82","83"],"/home/unknown/DBproj/hosttest/client/src/MovieDetail.js",["84","85"],"import './styles.css';\nimport { useEffect, useState } from 'react';\nimport MovieForm from './MovieForm';\n\nfunction MovieDetail({ match, isAuth, user }) {\n    const [movie, setmovie] = useState({});\n    const [gotData, setGot] = useState(false);\n    const [poster, setPoster] = useState('');\n    const getPoster = async (id) => {\n        await fetch(`http://www.omdbapi.com/?i=${id}&apikey=7b26edf7`)\n            .then((res) => res.json())\n            .then((data) => {\n                setPoster(data.Poster);\n            })\n            .catch(() => {});\n    };\n    const showMovie = () => {\n        return (\n            <div className=\"show-details\">\n                <img alt={movie.name} src={poster}></img>\n                <div className=\"holder\">\n                    <div className=\"details\">\n                        <h1>{movie.name}</h1>\n                        <div>\n                            <span className=\"heading\">Year:</span> {movie.year}\n                        </div>\n                        <div>\n                            <span className=\"heading\">Genre:</span>{' '}\n                            {movie.genre}\n                        </div>\n                        <div>\n                            <span className=\"heading\">Production Company:</span>{' '}\n                            {movie.production_company}\n                        </div>\n                        <div>\n                            <span className=\"heading\">Duration:</span>{' '}\n                            {movie.duration} mins\n                        </div>\n                        <div>\n                            <span className=\"heading\">Writer:</span>{' '}\n                            {movie.writer}\n                        </div>\n                        <div>\n                            <span className=\"heading\">Director:</span>{' '}\n                            {movie.director}\n                        </div>\n                        <div className=\"limit\">\n                            <span className=\"heading\">Actors:</span>{' '}\n                            {movie.actors}\n                        </div>\n                        <div className=\"limit\">\n                            <span className=\"heading\">Summary:</span>{' '}\n                            {movie.description}\n                        </div>\n                    </div>\n                    {isAuth ? (\n                        <div className=\"show-form\">\n                            <MovieForm movie={movie} user={user} />\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n        );\n    };\n    useEffect(() => {\n        console.log('Hello World from Movie');\n        console.log(match.params.id);\n        fetch(`/api/movies?id=${match.params.id}`)\n            .then((res) => res.json())\n            .then((data) => {\n                setmovie(data);\n                setGot(true);\n            });\n        return () => {\n            console.log('Unmounted Movie');\n        };\n    }, []);\n    useEffect(() => {\n        console.log(movie);\n        getPoster(movie.imdb_id);\n    }, [gotData]);\n    return (\n        <div className=\"App\">\n            {gotData ? <ol>{showMovie()}</ol> : 'loading'}{' '}\n        </div>\n    );\n}\n\nexport default MovieDetail;\n",["86","87"],"/home/unknown/DBproj/hosttest/client/src/Navig.js",[],"/home/unknown/DBproj/hosttest/client/src/Search.js",[],"/home/unknown/DBproj/hosttest/client/src/Components/ShowSearch.js",[],"/home/unknown/DBproj/hosttest/client/src/Components/MovieSearch.js",[],["88","89"],"/home/unknown/DBproj/hosttest/client/src/Components/UserSummary.js",[],"/home/unknown/DBproj/hosttest/client/src/Components/UserTable.js",[],"/home/unknown/DBproj/hosttest/client/src/Login.js",[],"/home/unknown/DBproj/hosttest/client/src/SignUp.js",[],"/home/unknown/DBproj/hosttest/client/src/ShowForm.js",["90"],"import './styles.css';\nimport { useState, useEffect } from 'react';\nimport FormIcons from './Components/FormIcons';\nfunction ShowForm(props) {\n    const [watched, setWatched] = useState(false);\n    const [later, setLater] = useState(false);\n    const [added, setAdd] = useState(false);\n    const [rating, setRating] = useState('');\n    const [review, setReview] = useState('');\n\n    useEffect(() => {\n        getReview();\n    }, []);\n\n    const watchHandler = () => {\n        setWatched(!watched);\n        if (watched) setLater(false);\n    };\n    const laterHandler = () => {\n        setLater(!later);\n        if (later) setWatched(false);\n    };\n    const getReview = async () => {\n        await fetch(\n            `/api/watched/shows?userId=${props.user}&showId=${props.show.id}`\n        )\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.length === 0) return;\n                const { ratings, review } = data[data.length - 1];\n                setWatched(true);\n                setAdd(true);\n                setRating(ratings);\n                setReview(review);\n            });\n    };\n    const addShowWatched = async () => {\n        await fetch(\n            `/api/add/shows?userId=${props.user}&showId=${props.show.id}&rating=${rating}&review=${review}`\n        );\n    };\n    const formHandler = (e) => {\n        e.preventDefault();\n        console.log(rating);\n        console.log(props.show.id);\n        addShowWatched();\n        getReview();\n        setAdd(true);\n    };\n    return (\n        <div>\n            {added ? (\n                <div>\n                    <h2>You have watched this show!</h2>\n                    <div>Your Rating: {rating}</div>\n                    <div>Your Review: {review}</div>\n                </div>\n            ) : (\n                <div>\n                    <FormIcons\n                        watched={watched}\n                        watchHandler={watchHandler}\n                        later={later}\n                        laterHandler={laterHandler}\n                    />\n                    <div className=\"watched-form\">\n                        {watched ? (\n                            <form onSubmit={formHandler}>\n                                <label>\n                                    <h3>Rating</h3>\n                                </label>\n                                <br />\n                                <input\n                                    type=\"number\"\n                                    min=\"1\"\n                                    max=\"5\"\n                                    value={rating}\n                                    required\n                                    onChange={(e) => {\n                                        setRating(e.target.value);\n                                    }}\n                                ></input>\n                                <br />\n                                <label>\n                                    <h3>Review</h3>\n                                </label>\n                                <br />\n                                <textarea\n                                    maxLength=\"255\"\n                                    value={review}\n                                    required\n                                    onChange={(e) => {\n                                        setReview(e.target.value);\n                                    }}\n                                ></textarea>\n                                <br />\n                                <br />\n                                <button className=\"btn btn-primary\">\n                                    Add review\n                                </button>\n                            </form>\n                        ) : null}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ShowForm;\n","/home/unknown/DBproj/hosttest/client/src/Components/FormIcons.js",[],"/home/unknown/DBproj/hosttest/client/src/MovieForm.js",["91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":8,"nodeType":"98","endLine":18,"endColumn":18,"suggestions":"99"},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":9,"column":22,"nodeType":"104","messageId":"105","endLine":9,"endColumn":26},{"ruleId":"96","severity":1,"message":"106","line":62,"column":8,"nodeType":"98","endLine":62,"endColumn":10,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"108","line":65,"column":8,"nodeType":"98","endLine":65,"endColumn":17,"suggestions":"109"},{"ruleId":"92","replacedBy":"110"},{"ruleId":"94","replacedBy":"111"},{"ruleId":"96","severity":1,"message":"112","line":77,"column":8,"nodeType":"98","endLine":77,"endColumn":10,"suggestions":"113"},{"ruleId":"96","severity":1,"message":"114","line":81,"column":8,"nodeType":"98","endLine":81,"endColumn":17,"suggestions":"115"},{"ruleId":"92","replacedBy":"116"},{"ruleId":"94","replacedBy":"117"},{"ruleId":"92","replacedBy":"118"},{"ruleId":"94","replacedBy":"119"},{"ruleId":"96","severity":1,"message":"120","line":13,"column":8,"nodeType":"98","endLine":13,"endColumn":10,"suggestions":"121"},{"ruleId":"96","severity":1,"message":"120","line":13,"column":8,"nodeType":"98","endLine":13,"endColumn":10,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["125"],["123"],["124"],"no-eval","eval can be harmful.","CallExpression","unexpected","React Hook useEffect has missing dependencies: 'match.params.id' and 'user'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["127"],["123"],["124"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'movie'. Either include it or remove the dependency array.",["129"],["123"],["124"],["123"],["124"],"React Hook useEffect has a missing dependency: 'getReview'. Either include it or remove the dependency array.",["130"],["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"142","fix":"144"},"Update the dependencies array to be: [getData, loggedIn]",{"range":"145","text":"146"},"Update the dependencies array to be: [match.params.id, user]",{"range":"147","text":"148"},"Update the dependencies array to be: [gotData, name]",{"range":"149","text":"150"},"Update the dependencies array to be: [match.params.id]",{"range":"151","text":"152"},"Update the dependencies array to be: [gotData, movie]",{"range":"153","text":"154"},"Update the dependencies array to be: [getReview]",{"range":"155","text":"156"},{"range":"157","text":"156"},[567,577],"[getData, loggedIn]",[2244,2246],"[match.params.id, user]",[2305,2314],"[gotData, name]",[2996,2998],"[match.params.id]",[3092,3101],"[gotData, movie]",[429,431],"[getReview]",[430,432]]